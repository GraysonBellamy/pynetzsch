# Pre-commit hooks for PyNetzsch
# See https://pre-commit.com for more information

repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: "Format Python code with Black"
        language_version: python3
        args: [--line-length=88]

  # Import sorting (using ruff instead of isort to avoid conflicts)
  # - repo: https://github.com/pycqa/isort
  #   rev: 5.13.2
  #   hooks:
  #     - id: isort
  #       name: "Sort Python imports with isort"
  #       args: [--profile=black, --line-length=88]

  # Linting and code quality
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        name: "Lint Python code with Ruff"
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: "Format Python code with Ruff"

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: "Type check with mypy"
        additional_dependencies:
          - types-setuptools
        args: [--ignore-missing-imports, --no-strict-optional]
        files: ^src/pynetzsch/.*\.py$

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: "Remove trailing whitespace"
      - id: end-of-file-fixer
        name: "Ensure files end with newline"
      - id: check-yaml
        name: "Check YAML syntax"
      - id: check-toml
        name: "Check TOML syntax"
      - id: check-json
        name: "Check JSON syntax"
      - id: check-merge-conflict
        name: "Check for merge conflict markers"
      - id: check-added-large-files
        name: "Check for large files"
        args: [--maxkb=1000]
      - id: check-case-conflict
        name: "Check for case conflicts"
      - id: mixed-line-ending
        name: "Check line endings"
        args: [--fix=lf]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: "Security check with Bandit"
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]
        exclude: tests/

  # Docstring checks (temporarily disabled while focusing on core functionality)
  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       name: "Check docstrings with pydocstyle"
  #       additional_dependencies: [toml]
  #       files: ^src/pynetzsch/.*\.py$
  #       args: [--convention=numpy]

  # Jupyter notebook cleaning
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
        name: "Format Jupyter notebooks with Black"
        files: \.ipynb$
      - id: nbqa-ruff
        name: "Lint Jupyter notebooks with Ruff"
        files: \.ipynb$

  # Spell checking
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        name: "Check spelling"
        args: [--write-changes]
        exclude: |
          (?x)^(
            .*\.lock|
            .*\.ngb-ss3|
            tests/test_files/.*
          )$

# Configuration for specific hooks
default_install_hook_types: [pre-commit, pre-push]
default_stages: [pre-commit]

# Minimum pre-commit version
minimum_pre_commit_version: '3.0.0'
